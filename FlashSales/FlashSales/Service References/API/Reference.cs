//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlashSales.API {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoProducto", Namespace="http://schemas.datacontract.org/2004/07/API_FlashSales.Objects")]
    [System.SerializableAttribute()]
    public partial class TipoProducto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnidadesProducto", Namespace="http://schemas.datacontract.org/2004/07/API_FlashSales.Objects")]
    [System.SerializableAttribute()]
    public partial class UnidadesProducto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lote", Namespace="http://schemas.datacontract.org/2004/07/API_FlashSales.Objects")]
    [System.SerializableAttribute()]
    public partial class Lote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fecha_caducidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fecha_creacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_LoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_ProductoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Precio_UndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Valor_loteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha_caducidad {
            get {
                return this.Fecha_caducidadField;
            }
            set {
                if ((this.Fecha_caducidadField.Equals(value) != true)) {
                    this.Fecha_caducidadField = value;
                    this.RaisePropertyChanged("Fecha_caducidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha_creacion {
            get {
                return this.Fecha_creacionField;
            }
            set {
                if ((this.Fecha_creacionField.Equals(value) != true)) {
                    this.Fecha_creacionField = value;
                    this.RaisePropertyChanged("Fecha_creacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Lote {
            get {
                return this.ID_LoteField;
            }
            set {
                if ((this.ID_LoteField.Equals(value) != true)) {
                    this.ID_LoteField = value;
                    this.RaisePropertyChanged("ID_Lote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Producto {
            get {
                return this.ID_ProductoField;
            }
            set {
                if ((this.ID_ProductoField.Equals(value) != true)) {
                    this.ID_ProductoField = value;
                    this.RaisePropertyChanged("ID_Producto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Precio_Und {
            get {
                return this.Precio_UndField;
            }
            set {
                if ((this.Precio_UndField.Equals(value) != true)) {
                    this.Precio_UndField = value;
                    this.RaisePropertyChanged("Precio_Und");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Valor_lote {
            get {
                return this.Valor_loteField;
            }
            set {
                if ((this.Valor_loteField.Equals(value) != true)) {
                    this.Valor_loteField = value;
                    this.RaisePropertyChanged("Valor_lote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="API.FlashSalesService")]
    public interface FlashSalesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/Tipos", ReplyAction="http://tempuri.org/FlashSalesService/TiposResponse")]
        FlashSales.API.TipoProducto[] Tipos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/Tipos", ReplyAction="http://tempuri.org/FlashSalesService/TiposResponse")]
        System.Threading.Tasks.Task<FlashSales.API.TipoProducto[]> TiposAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/Unidades", ReplyAction="http://tempuri.org/FlashSalesService/UnidadesResponse")]
        FlashSales.API.UnidadesProducto[] Unidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/Unidades", ReplyAction="http://tempuri.org/FlashSalesService/UnidadesResponse")]
        System.Threading.Tasks.Task<FlashSales.API.UnidadesProducto[]> UnidadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/CargarLote", ReplyAction="http://tempuri.org/FlashSalesService/CargarLoteResponse")]
        FlashSales.API.Lote CargarLote(int IDLote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/CargarLote", ReplyAction="http://tempuri.org/FlashSalesService/CargarLoteResponse")]
        System.Threading.Tasks.Task<FlashSales.API.Lote> CargarLoteAsync(int IDLote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/CargarInventario", ReplyAction="http://tempuri.org/FlashSalesService/CargarInventarioResponse")]
        FlashSales.API.Lote[] CargarInventario(int IDUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlashSalesService/CargarInventario", ReplyAction="http://tempuri.org/FlashSalesService/CargarInventarioResponse")]
        System.Threading.Tasks.Task<FlashSales.API.Lote[]> CargarInventarioAsync(int IDUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FlashSalesServiceChannel : FlashSales.API.FlashSalesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlashSalesServiceClient : System.ServiceModel.ClientBase<FlashSales.API.FlashSalesService>, FlashSales.API.FlashSalesService {
        
        public FlashSalesServiceClient() {
        }
        
        public FlashSalesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlashSalesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlashSalesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlashSalesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FlashSales.API.TipoProducto[] Tipos() {
            return base.Channel.Tipos();
        }
        
        public System.Threading.Tasks.Task<FlashSales.API.TipoProducto[]> TiposAsync() {
            return base.Channel.TiposAsync();
        }
        
        public FlashSales.API.UnidadesProducto[] Unidades() {
            return base.Channel.Unidades();
        }
        
        public System.Threading.Tasks.Task<FlashSales.API.UnidadesProducto[]> UnidadesAsync() {
            return base.Channel.UnidadesAsync();
        }
        
        public FlashSales.API.Lote CargarLote(int IDLote) {
            return base.Channel.CargarLote(IDLote);
        }
        
        public System.Threading.Tasks.Task<FlashSales.API.Lote> CargarLoteAsync(int IDLote) {
            return base.Channel.CargarLoteAsync(IDLote);
        }
        
        public FlashSales.API.Lote[] CargarInventario(int IDUsuario) {
            return base.Channel.CargarInventario(IDUsuario);
        }
        
        public System.Threading.Tasks.Task<FlashSales.API.Lote[]> CargarInventarioAsync(int IDUsuario) {
            return base.Channel.CargarInventarioAsync(IDUsuario);
        }
    }
}
